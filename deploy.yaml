apiVersion: v1
kind: ServiceAccount
metadata:
  name: edge-runtime
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: use-restricted-scc
subjects:
  - kind: ServiceAccount
    name: edge-runtime
    namespace: ipaas-demo
roleRef:
  kind: ClusterRole
  name: system:openshift:scc:restricted
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: edge-runtime
data:
  application.properties: |
    user.Administrator.password=$secret{ADMIN_PASSWORD}

    artConnection.sttCustomerManagement.sttCustomerManagement.connections.sqlserver.connectionEnabled=true
    artConnection.sttCustomerManagement.sttCustomerManagement.connections.sqlserver.connectionSettings.serverName=$secret{DB_SERVER}
    artConnection.sttCustomerManagement.sttCustomerManagement.connections.sqlserver.connectionSettings.portNumber=$secret{DB_PORT}
    artConnection.sttCustomerManagement.sttCustomerManagement.connections.sqlserver.connectionSettings.user=$secret{DB_USERNAME}
    artConnection.sttCustomerManagement.sttCustomerManagement.connections.sqlserver.connectionSettings.password=$secret{DB_PASSWORD}
    artConnection.sttCustomerManagement.sttCustomerManagement.connections.sqlserver.connectionSettings.databaseName=fr_db
    artConnection.sttCustomerManagement.sttCustomerManagement.connections.sqlserver.connectionSettings.otherProperties= 

    jndi.DEFAULT_IS_JNDI_PROVIDER.providerURL=$secret{JNDI_URL}
    jms.DEFAULT_IS_JMS_CONNECTION.clientID=DEFAULT_IS_JMS_CLIENT
    jms.DEFAULT_IS_JMS_CONNECTION.enabled=true
    jms.DEFAULT_IS_JMS_CONNECTION.csqSize=0
    jms.DEFAULT_IS_JMS_CONNECTION.jndi_jndiAliasName=DEFAULT_IS_JNDI_PROVIDER
    jms.DEFAULT_IS_JMS_CONNECTION.jndi_automaticallyCreateUMAdminObjects=true
    jms.DEFAULT_IS_JMS_CONNECTION.producerMaxRetryAttempts=30
    jms.DEFAULT_IS_JMS_CONNECTION.producerRetryInterval=1000
    jms.DEFAULT_IS_JMS_CONNECTION.jndi_connectionFactoryLookupName=kubernetes_um

    settings.watt.server.audit.service.include=sttCustomerManagement.*
    settings.watt.server.audit.service.exclude=wm.,com.,pub.

    globalvariable.SERVER.value=$env{SERVER}
---
# To create the gh-regcred secret, submit this command:
# oc create secret docker-registry gh-regcred --docker-server=${GH_CR_SERVER} --docker-username=${GH_CR_USERNAME} --docker-password=${GH_CR_PASSWORD}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge-runtime
  labels:
    app.kubernetes.io/instance: edge-runtime
    app.kubernetes.io/name: microservicesruntime
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: edge-runtime
      app.kubernetes.io/name: microservicesruntime
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: edge-runtime
        app.kubernetes.io/name: microservicesruntime
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '5555'
        prometheus.io/scheme: http
    spec:
      serviceAccountName: edge-runtime
      restartPolicy: Always
      imagePullSecrets:
        - name: gh-regcred
      securityContext: {}  
      containers:
        - name: edge-runtime
          image: ghcr.io/staillanibm/msr-customers:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: application-properties
              mountPath: /opt/softwareag/IntegrationServer/application.properties
              subPath:   application.properties
              readOnly:  true
            - name: edge-secrets
              mountPath: /etc/secrets
          ports:
            - name: https
              containerPort: 5543
              protocol: TCP
            - name: http
              containerPort: 5555
              protocol: TCP
            - name: diag
              containerPort: 9999
              protocol: TCP
          env:
            - name: SAG_IS_CLOUD_REGISTER_URL
              valueFrom:
                secretKeyRef:
                  key: SAG_IS_CLOUD_REGISTER_URL
                  name: edge-secrets
            - name: SAG_IS_EDGE_CLOUD_ALIAS
              valueFrom:
                secretKeyRef:
                  key: SAG_IS_EDGE_CLOUD_ALIAS
                  name: edge-secrets
            - name: SAG_IS_CLOUD_REGISTER_TOKEN
              valueFrom:
                secretKeyRef:
                  key: SAG_IS_CLOUD_REGISTER_TOKEN
                  name: edge-secrets
            - name: SAG_IS_CLOUD_ALLOW_SYNC
              value: "false"
            - name: SERVER
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SW_AGENT_COLLECTOR_ESTABLISH_CLOUD_COMMUNICATION
              value: 'true'
            - name: SW_AGENT_EXTERNAL_ESTABLISH_COMMUNICATION
              value: 'false'
            # - name: SW_AGENT_OTEL_ENDPOINT
            #   value: http://jaeger-collector.observability.svc.cluster.local:4318/v1/traces
            # - name: SW_AGENT_OTEL_HEADERS
            #   value: 'Content-Type#application/x-protobuf'
            # - name: SW_AGENT_EXTERNAL_SUPPORT_LONG_ID
            #   value: 'false'
            # - name: SW_AGENT_EXTERNAL_API_ERROR_CODES
            #   value: '502,503,504'
            # - name: SW_AGENT_OTEL_RESOURCE_ATTRIBUTES
            #   value: 'service.name#customer-management, service.namespace#ipaas-demo'
            - name: SW_AGENT_TRACE_TRANSFER_INTERVAL
              value: '1000'
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ "ALL" ]
            seccompProfile:
              type: RuntimeDefault
          livenessProbe:
            tcpSocket:
              port: http
            timeoutSeconds: 2
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: http
            periodSeconds: 15
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 20
            timeoutSeconds: 2
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 50
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: "1"
              memory: 2048Mi
      volumes:
        - name: application-properties
          configMap:
            name: edge-runtime
            items:
            - key:  application.properties
              path: application.properties
        - name: edge-secrets
          secret:
            secretName: edge-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: edge-runtime
  labels:
    app.kubernetes.io/instance: edge-runtime
    app.kubernetes.io/name: microservicesruntime
spec:
  selector:
    app.kubernetes.io/instance: edge-runtime
    app.kubernetes.io/name: microservicesruntime
  ports:
    - name: http
      port: 5555
      targetPort: 5555

